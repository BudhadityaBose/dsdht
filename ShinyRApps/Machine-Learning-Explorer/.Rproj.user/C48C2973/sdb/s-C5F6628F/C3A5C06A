{
    "contents" : "\nsetwd(\"/Users/avi/boxer/data/week1data\")\nload(\".RData\")\n\n#nice Plots\npar(mfrow=c(1,1)) #1x1 plot\npar(mfrow=c(2,2)) #2x2 plot\n\n\n# load(\"Shiny.RData\")\nbrowseVignettes(package=\"dplyr\")\nsave.image()\nsave.image(\"Shiny.RData\")\n# save specific objects to a file\n# if you don't specify the path, the cwd is assumed \nsave(object list,file=\"myfile.RData\")\n\n#loading data\n\tmydata = read.csv(\"NYC_Jobs.csv\")\n\n#getting stock data\n\n\nlibrary(Quandl)\nlibrary(ggplot2)\ndata_series <- Quandl(\"GOOG/NASDAQ_AAPL\", start_date=\"2005-01-01\")[,c(1,5)] \n\nmy.plot <- ggplot(data=data_series, aes(x=Date, y=Close)) +\ngeom_line(color=\"#FAB521\") + # Adding a colored line\ntheme(panel.background = element_rect(fill=\"#393939\"), panel.grid.major.x = element_blank(),\npanel.grid.major.y = element_line(colour=\"white\", size=0.1),\npanel.grid.minor = element_line(colour=\"white\", size=0.1)) +\nxlab(\"Date\") + ylab(\"Closing Price\") + ggtitle(\"AAPL\")\nmy.plot\t\n#renaming a column\nrename(d, c(\"beta\"=\"two\", \"gamma\"=\"three\"))\n\n#New columns\nMyData=mutate(MyData,Salary.Annualized.From=ifelse(Salary.Frequency == \"Daily\" , Salary.Range.From*252,\n\t\tifelse(Salary.Frequency == \"Hourly\", Salary.Range.From*2000, Salary.Range.From)))\n\n#seclet columns\nt3<- dplyr::select(titanic3, pclass, survived, sex, age, sibsp, parch)\n\n#Filtering\nFromSalaryAverage = MyData %>% group_by(Agency) %>% summarise(FromSalaryAverage=mean(Salary.Annualized.From))\n\n#add a column\n\n#nice little graph\nqplot(reorder(class,hwy,median), hwy, data = mpg,geom = c(\"boxplot\"))\n\n#shiny work\nsetwd(\"/Users/avi/boxer/Shiny/\")\nload(\"Shiny.RData\")\nrunApp()\n\n\n#BASIC STATS FUNCTIONS TO Run\n# ➢ Check for mepty Variabless\nt<-titanic3\ndescribeBy(t,group=\"survived\")\nhist(t$survived[t[survivied==0]])\n\nt$survived[,t$survivied==0]\n\n#comapring a dataset by anouther factor by basic visualization\nplot(density(temp$Heart.Rate[temp$Gender == \"Male\"]), col = \"blue\")\nlines(density(temp$Heart.Rate[temp$Gender == \"Female\"]), col = \"pink\")\n\n#nice boxplots\nboxplot(weight ~ group, data = PlantGrowth)\n\n#Conducting the Bartlett test of homogeneity of variances.\nbartlett.test(PlantGrowth$weight ~ PlantGrowth$group)\n\n#3a One-Way ANOVA\nsummary(aov(weight ~ group, data = PlantGrowth))\n\n#Mosaic plot\nmosaicplot(HairEyeColor, shade = TRUE)\n\n\n\n#Data cleaning tools!\n\t# ➢ What are the central tendencies?\n\n\n\t# ➢ What is the spread of the values?\n\n\n\n\t# ➢ How much do the values vary?\n\n\n\n\n\t# ➢ Are there any abnormalities that stand out?\n\n#Three types of Missingness\nmd.pattern(t)\n\n#remove blanks\ndf[df == \"\"] <- NA\n#mean impute for a random column\nt$age = ifelse(is.na(t$age), mean(t$age, na.rm=TRUE), t$age)\n\n\n#Missing Completely at Random (MCAR)\n\n#Missing at Random (MAR)\n#Missing Not at Random (MNAR)\n\n\n#KNN\n#k = square root of n\n\n#train a NN on how to do KNN properly. \n\n\n#CHECK ASSUMPTIONS\n\n#➢ Linearity\n# Not linear? Does Tranform help?\n\n#➢ Constant Variance\n# Not linear? Does Tranform help?\n\n#➢ Normality\n#➢ Normality\n\n#➢ Independent Error\n\n\n\n\nlibrary(ggthemes)\nplot(model)\n#basic GGplot\nggplot(mpg, aes(hwy, cty)) +\n  geom_point(aes(color = cyl)) +\n  geom_smooth(method =\"lm\") +\n  coord_cartesian() +\n  scale_color_gradient() +\n  theme_hc()\n\nggpsadflot(dat,asdfadsfjh  aes(x=xvar, y=yvar)) +\n  geom_point(shape=1)      # Use hollow circles\n\nggplot(dat, aes(x=xvar, y=yvar)) +\n  geom_point(shape=1) +    # Use hollow circles\n  geom_smooth(method=lm)   # Add linear regression line \n#  (by default includes 95% confidence region)\n\n\n\n\n#------------------\n#MULTIVARIATE assumptions\n\n#------- CHECK FOR THESE FOR EACH OF THE INPUT VARIABLES  ----------\n#➢ Linearity\n\n#➢ Constant Variance\n\n#➢ Normality\t\n\n#➢ Independent Errors\n\n\n\n> Are the predictor variables useful to help predict Y?\n\n> How well does our model fit? \n\n> How accurate are our guesses for y? \n\n\n\n\n#Check for AIC\n#Check for BIC\n\n\nForward selection\nbackward selection\nboth selection\n",
    "created" : 1444219590003.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2062895729",
    "id" : "C3A5C06A",
    "lastKnownWriteTime" : 1444404560,
    "path" : "~/boxer/Avi_r_tools.R",
    "project_path" : "Avi_r_tools.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}